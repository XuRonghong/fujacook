<?php

namespace App\Repositories\Admin;

use App\Http\Controllers\FuncController;
use App\Menu;
use App\Repositories\Repository;
use App\Scene;

class ScenesRepository extends Repository
{
    protected $model;

    public function __construct(Scene $model)
    {
        $this->model = $model;
    }

    public function all($attributes='')
    {
        return $this->model::all();
    }

    public function create($attributes)
    {
        try{
            $attributes = array_merge($attributes, [
                'author_id' => auth()->guard('admin')->user()->id,
                'open' => 1,
            ]);
            return parent::create($attributes); // TODO: Change the autogenerated stub
        } catch (\Exception $e){
            return ['errors'=> $e->getMessage()];
        }
    }

    public function update($attributes, $id)
    {
        try{
            $attributes = array_merge($attributes, [
                'author_id' => auth()->guard('admin')->user()->id,
            ]);
            //
            $scene = Scene::query()->find($id);
            $attributes['open'] = ($attributes['open']=="change")? !$scene->open : $scene->open;

            return parent::update($attributes, $id);
        } catch (\Exception $e){
            return ['errors'=> $e->getMessage()];
        }
    }

    public function delete($id)
    {
        return parent::delete($id);
    }



    /*
     * data object or array forEach to do.
     */
    public function eachOne_aaData($arr)
    {
        if ( $arr['aaData']) {
            foreach ($arr['aaData'] as $key => $var) {
                //找圖片檔案
                $var = $this->transFileIdtoImage($var);
            }
        }
        return $arr;
    }

    /*
     * table - file_id to find File trans image.
     */
    public function transFileIdtoImage($data)
    {
        if ( !$data) return $data;
        //
        $image_arr = [];
        $tmp_arr = explode( ';', $data->file_id );
        $tmp_arr = array_filter( $tmp_arr );
        foreach ($tmp_arr as $item) {
            $image_arr[$item] = FuncController::_getFilePathById( $item );
        }
        if ($tmp_arr){
            $data->image = $image_arr;
        } else {
            $data->image = [];
        }
        return $data;
    }

}
