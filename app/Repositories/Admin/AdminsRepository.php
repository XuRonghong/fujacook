<?php

namespace App\Repositories\Admin;

use App\Admin;
use App\Repositories\Repository;


class AdminsRepository extends Repository
{
    protected $model;

    public function __construct(Admin $model)
    {
        $this->model = $model;
    }

    public function all($attributes='')
    {
        return $this->model::all();
    }

    public function create($attributes)
    {
        try{
            $attributes = array_merge($attributes, [
                'no' => 'a'.auth()->guard('admin')->user()->id. time().rand('00','99'), //以時間當亂數種子
                'createIP' => getUserIpAddr(),
                'active' => 1,
                'remember_token' =>  str_random(10),
            ]);
            return parent::create($attributes); // TODO: Change the autogenerated stub
        } catch (\Exception $e){
            return ['errors'=> $e->getMessage()];
        }
    }

    public function update($attributes, $id)
    {
        try{
            $attributes = array_merge($attributes, [
                //'no' => 'a'. auth()->guard('admin')->user()->id. time(). rand('00','99'), //以時間當亂數種子
                'createIP' => getUserIpAddr(),
//                'active' => 1,
//                'remember_token' =>  str_random(10),
            ]);
            // 啟用 或 不啟用
            if (isset($attributes['open'])) {
                $admin = $this->model->find($id);
                $attributes['active'] = ($attributes['active'] == "change") ? !$admin->active : $admin->active;
            }
            return parent::update($attributes, $id);
        } catch (\Exception $e){
            return ['errors'=> $e->getMessage()];
        }
    }

    public function delete($id)
    {
        return parent::delete($id);
    }


    /*
     * data object or array forEach to do.
     */
    public function eachOne_aaData($arr)
    {
        if ( $arr['aaData']) {
            foreach ($arr['aaData'] as $key => $var) {
                //
                $var->Title = trans('menu.'. $var->name. '.title');
                //找圖片檔案
//                $var = $this->transFileIdtoImage($var);
            }
        }
        return $arr;
    }


    //
    public function findOrFail($id)
    {
//        return $this->model->findOrFail($id);
        return $this->model->where('no', $id)->first();
    }
}
